/*     */ package fr.epiode.jamutt;
/*     */ 
/*     */ import java.awt.Color;
/*     */ import java.awt.Graphics;
/*     */ import java.awt.Rectangle;
/*     */ import java.util.Random;
/*     */ 
/*     */ public class ColidChecker
/*     */ {
/*  10 */   static Random r = new Random();
/*     */   
/*  12 */   static Rectangle authorized = new Rectangle(1427, 952, 93, 88);
/*     */   
/*  14 */   static int[][] all_colisions = new int[][] {
/*     */       
/*  16 */       { 246, 163, 634, 641
/*  17 */       }, { 246, 958, 629, 642
/*  18 */       }, { 62, 1921, 651, 641
/*  19 */       }, { 59, 2641, 660, 644
/*  20 */       }, { 63, 3358, 651, 647
/*  21 */       }, { 70, 4479, 650, 646
/*  22 */       }, { 1121, 4320, 629, 643
/*  23 */       }, { 1123, 3604, 638, 640
/*  24 */       }, { 1125, 2884, 628, 636
/*  25 */       }, { 1125, 2165, 625, 637 }, 
/*  26 */       { 877, 960, 642, 644
/*  27 */       }, { 1118, 235, 634, 646
/*  28 */       }, { 1766, 945, 630, 654
/*  29 */       }, { 2141, 4313, 648, 648
/*  30 */       }, { 2144, 3685, 653, 634
/*  31 */       }, { 2629, 2643, 646, 640
/*  32 */       }, { 2631, 1763, 646, 639
/*  33 */       }, { 2875, 167, 632, 632
/*  34 */       }, { 2938, 3361, 651, 639
/*  35 */       }, { 3281, 1759, 626, 645 }, 
/*  36 */       { 3742, 149, 653, 650
/*  37 */       }, { 4007, 2399, 625, 642
/*  38 */       }, { 4015, 3042, 622, 640
/*  39 */       }, { 4559, 4321, 633, 641
/*  40 */       }, { 5199, 155, 639, 650
/*  41 */       }, { 5204, 956, 640, 646
/*  42 */       }, { 5204, 1765, 634, 634
/*  43 */       }, { 4964, 2397, 633, 644
/*  44 */       }, { 4963, 3042, 640, 639
/*  45 */       }, { 3936, 4313, 621, 648
/*     */       }, 
/*  47 */       { 241, 3, 78, 158
/*  48 */       }, { 241, 799, 79, 240
/*  49 */       }, { 0, 1839, 798, 81
/*  50 */       }, { 720, 1843, 83, 482
/*  51 */       }, { 718, 2560, 79, 479
/*  52 */       }, { 720, 3275, 83, 488
/*  53 */       }, { 719, 3998, 84, 885
/*  54 */       }, { 717, 5117, 86, 164
/*  55 */       }, { 724, 5194, 2156, 86
/*  56 */       }, { 2793, 4872, 87, 409 }, 
/*  57 */       { 2074, 3682, 86, 396
/*  58 */       }, { 1758, 3678, 402, 85
/*  59 */       }, { 1758, 3679, 83, 1283
/*  60 */       }, { 2079, 4316, 85, 644
/*  61 */       }, { 1041, 4240, 82, 721
/*  62 */       }, { 1038, 3515, 81, 487
/*  63 */       }, { 1040, 2799, 79, 483
/*  64 */       }, { 1039, 1834, 81, 725
/*  65 */       }, { 1039, 1838, 1117, 85
/*  66 */       }, { 1040, 876, 324, 84 }, 
/*  67 */       { 1758, 633, 82, 406
/*  68 */       }, { 2396, 1515, 84, 887
/*  69 */       }, { 2396, 2316, 246, 85
/*  70 */       }, { 2079, 1841, 81, 1519
/*  71 */       }, { 2397, 2633, 83, 409
/*  72 */       }, { 2399, 2632, 243, 90
/*  73 */       }, { 2085, 3279, 634, 83
/*  74 */       }, { 3281, 2638, 399, 84
/*  75 */       }, { 3918, 2323, 82, 480
/*  76 */       }, { 3597, 2640, 86, 1363 }, 
/*  77 */       { 3917, 3039, 84, 401
/*  78 */       }, { 2882, 3920, 77, 399
/*  79 */       }, { 2879, 4237, 803, 84
/*  80 */       }, { 3595, 4238, 85, 1043
/*  81 */       }, { 3605, 5198, 1675, 82
/*  82 */       }, { 5190, 4875, 93, 405
/*  83 */       }, { 3913, 3996, 88, 401
/*  84 */       }, { 3919, 3677, 720, 85
/*  85 */       }, { 3918, 3998, 1042, 83
/*  86 */       }, { 4876, 3677, 84, 402 }, 
/*  87 */       { 4877, 3035, 81, 407
/*  88 */       }, { 4879, 2396, 78, 405
/*  89 */       }, { 5118, 1597, 82, 564
/*  90 */       }, { 5120, 799, 80, 563
/*  91 */       }, { 5113, 159, 86, 403
/*  92 */       }, { 4798, 160, 398, 84
/*  93 */       }, { 4799, 160, 86, 641
/*  94 */       }, { 4402, 721, 478, 82
/*  95 */       }, { 3512, 718, 251, 84
/*  96 */       }, { 2798, 720, 86, 399 }, 
/*  97 */       { 2796, 1036, 2085, 83
/*  98 */       }, { 4798, 1039, 85, 324
/*  99 */       }, { 4562, 1281, 322, 81
/* 100 */       }, { 4558, 1600, 321, 80
/* 101 */       }, { 4800, 1597, 80, 567
/* 102 */       }, { 4560, 2082, 319, 80
/* 103 */       }, { 4563, 2078, 76, 321
/* 104 */       }, { 4524, 1120, 40, 240
/* 105 */       }, { 4525, 1601, 34, 158
/* 106 */       }, { 3360, 1119, 1200, 82 }, 
/* 107 */       { 3358, 1679, 1202, 81
/* 108 */       }, { 3359, 1119, 35, 640
/* 109 */       }, { 2398, 2959, 239, 84 }
/*     */     };
/*     */ 
/*     */   
/* 113 */   static Rectangle[] all = null;
/*     */   
/*     */   private static void createRect() {
/* 116 */     all = new Rectangle[all_colisions.length];
/* 117 */     for (int i = 0; i < all_colisions.length; i++) {
/* 118 */       all[i] = new Rectangle(all_colisions[i][0], all_colisions[i][1], all_colisions[i][2], all_colisions[i][3]);
/*     */     }
/*     */   }
/*     */   
/*     */   public static boolean checkCanMove(Player p) {
/* 123 */     if (all == null)
/* 124 */       createRect(); 
/* 125 */     Rectangle pl = new Rectangle(p.getX(), p.getY() + p.getHeight(), p.getWidth(), 1); byte b; int i; Rectangle[] arrayOfRectangle;
/* 126 */     for (i = (arrayOfRectangle = all).length, b = 0; b < i; ) { Rectangle col = arrayOfRectangle[b];
/* 127 */       if (col.intersects(pl) && !authorized.intersects(pl))
/* 128 */         return false;  b++; }
/*     */     
/* 130 */     return true; } public static void drawRect(Camera cam, Graphics g) {
/*     */     byte b;
/*     */     int i;
/*     */     Rectangle[] arrayOfRectangle;
/* 134 */     for (i = (arrayOfRectangle = all).length, b = 0; b < i; ) { Rectangle col = arrayOfRectangle[b];
/* 135 */       g.setColor(new Color(r.nextInt(256), r.nextInt(256), r.nextInt(256)));
/* 136 */       g.drawRect(cam.getX() + col.x, cam.getY() + col.y, col.width, col.height);
/*     */       b++; }
/*     */   
/*     */   }
/*     */ }


/* Location:              C:\Users\Theo\Downloads\EpiSociety.jar!\fr\epiode\jamutt\ColidChecker.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */